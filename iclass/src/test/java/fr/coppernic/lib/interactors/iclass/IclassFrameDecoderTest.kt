package fr.coppernic.lib.interactors.iclass

import org.amshove.kluent.`should equal`
import org.junit.Assert.assertArrayEquals
import org.junit.Test

class IclassFrameDecoderTest {
    val frameTest = byteArrayOf(0x00, 0x11, 0x0A, 0x44, 0x00, 0x00, 0x00, 0x00,
            0xBD.toByte(), 0x09, 0x9E.toByte(), 0x07, 0x81.toByte(), 0x05, 0x06, 0x3D,
            0x80.toByte(), 0x05, 0x80.toByte(), 0xB4.toByte(), 0x98.toByte())
    val frameTest37bit = byteArrayOf(0x00, 0x12, 0x0A, 0x44, 0x00, 0x00, 0x00, 0x00,
            0xBD.toByte(), 0x0A, 0x9E.toByte(), 0x08, 0x81.toByte(), 0x06, 0x03, 0x00, 0x03,
            0xD0.toByte(), 0x8F.toByte(), 0xE0.toByte(), 0xFD.toByte(), 0xE8.toByte())
    val frameTest48bit = byteArrayOf(0x00, 0x12, 0x0A, 0x44, 0x00, 0x00, 0x00, 0x00,
            0xBD.toByte(), 0x0B, 0x9E.toByte(), 0x09, 0x81.toByte(), 0x07, 0x00, 0x80.toByte(),
            0x0F, 0xFF.toByte(), 0x03, 0x44, 0x9F.toByte(), 0xE1.toByte(), 0x31)

    @Test
    fun getPacs() {
        val test = IclassFrameDecoder(frameTest)
        val test37 = IclassFrameDecoder(frameTest37bit)
        val test48 = IclassFrameDecoder(frameTest48bit)
        assertArrayEquals(test.pacs, byteArrayOf(0x00, 0xF6.toByte(),
                0x00, 0x16))
        assertArrayEquals(test37.pacs, byteArrayOf(0x00, 0x00,
                0x00, 0x00, 0x00, 0x7A, 0x11, 0xFC.toByte()))
        assertArrayEquals(test48.pacs, byteArrayOf(0x00, 0x00,
                0x80.toByte(), 0x0F, 0xFF.toByte(), 0x03, 0x44, 0x9F.toByte()))

        test.type `should equal` Type.HF
        test37.type `should equal` Type.HF
        test48.type `should equal` Type.HF
    }
}